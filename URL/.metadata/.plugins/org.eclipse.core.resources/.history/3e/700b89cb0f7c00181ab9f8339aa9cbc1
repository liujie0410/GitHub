package ppp;


import java.io.BufferedReader;  
import java.io.InputStreamReader;  
import java.net.URL;  
import java.util.regex.Pattern;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JTextPane;
import javax.swing.text.Style;


public class webPageResource extends JFrame{  
private String urlString = null;
private String typeString=null;

public static void main(String[] args) {  
    	JFrame frame = new JFrame();
    	JTextField url = new JTextField();
        
    	
		webPageResource t6=new webPageResource();  
        String urlString= t6.getPageSource("https://hao.360.cn/?wd_xp1");  
        
        System.out.println(urlString);  
    }

 public String webPageResource(String encoding) {
	 String typeString = encoding;
	return typeString;
 }


	public String getPageSource(String string) {    
        StringBuffer sb = new StringBuffer();    
        try {   
            //构建一URL对象    
            URL url = new URL(urlString);    
            //使用openStream得到一输入流并由此构造一个BufferedReader对象    
            BufferedReader in = new BufferedReader(new InputStreamReader(url    
                    .openStream(), typeString));    
            String line;    
            //读取www资源    
            while ((line = in.readLine()) != null) {    
                sb.append(line);    
                sb.append("\n");  
            }    
            in.close();    
        } catch (Exception ex) {    
            System.err.println(ex);    
        }    
        
        return Html2Text(sb.toString());  
    }   

    public static String StripHT(String strHtml) {  
        String txtcontent = strHtml.replaceAll("</?[^>]+>", ""); //剔出<html>的标签    
           txtcontent = txtcontent.replaceAll("<a>\\s*|\t|\r|\n</a>", "");//去除字符串中的空格,回车,换行符,制表符    
           return txtcontent;  
      }  
    
    
    public static String Html2Text(String inputString) {  
        String htmlStr = inputString; // 含html标签的字符串  
        String textStr = "";  
        java.util.regex.Pattern p_script;  
        java.util.regex.Matcher m_script;  
        java.util.regex.Pattern p_style;  
        java.util.regex.Matcher m_style;  
        java.util.regex.Pattern p_html;  
        java.util.regex.Matcher m_html;  
        try {  
            String regEx_script = "<[\\s]*?script[^>]*?>[\\s\\S]*?<[\\s]*?\\/[\\s]*?script[\\s]*?>"; // 定义script的正则表达式{或<script[^>]*?>[\\s\\S]*?<\\/script>  
            String regEx_style = "<[\\s]*?style[^>]*?>[\\s\\S]*?<[\\s]*?\\/[\\s]*?style[\\s]*?>"; // 定义style的正则表达式{或<style[^>]*?>[\\s\\S]*?<\\/style>  
            String regEx_html = "<[^>]+>"; // 定义HTML标签的正则表达式  
            p_script = Pattern.compile(regEx_script, Pattern.CASE_INSENSITIVE);  
            m_script = p_script.matcher(htmlStr);  
            htmlStr = m_script.replaceAll(""); // 过滤script标签  
            p_style = Pattern.compile(regEx_style, Pattern.CASE_INSENSITIVE);  
            m_style = p_style.matcher(htmlStr);  
            htmlStr = m_style.replaceAll(""); // 过滤style标签  
            p_html = Pattern.compile(regEx_html, Pattern.CASE_INSENSITIVE);  
            m_html = p_html.matcher(htmlStr);  
            htmlStr = m_html.replaceAll(""); // 过滤html标签  
            textStr = htmlStr;  
        } catch (Exception e) {System.err.println("Html2Text: " + e.getMessage()); }  
        //剔除空格行  
        textStr=textStr.replaceAll("[ ]+", " ");  
        textStr=textStr.replaceAll("(?m)^\\s*$(\\n|\\r\\n)", "");  
        return textStr;// 返回文本字符串  
    }  
    
}


